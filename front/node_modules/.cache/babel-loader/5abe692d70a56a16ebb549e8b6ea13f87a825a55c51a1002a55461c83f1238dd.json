{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Loris\\\\Desktop\\\\\\xC9cole\\\\Big Data\\\\TP\\\\front\\\\src\\\\Components\\\\Chatbot.js\",\n  _s = $RefreshSig$();\n// src/components/Chatbot.js\nimport React, { useState } from 'react';\nimport './Chatbot.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chatbot = () => {\n  _s();\n  const [messages, setMessages] = useState([{\n    sender: 'bot',\n    text: 'Bonjour ! Comment puis-je vous aider aujourd\\'hui ?'\n  }]);\n  const [input, setInput] = useState('');\n  const handleSend = () => {\n    if (input.trim() === '') return;\n    const userMessage = {\n      sender: 'user',\n      text: input\n    };\n    setMessages([...messages, userMessage]);\n    setInput('');\n\n    // Simuler une réponse du bot après 1 seconde\n    setTimeout(() => {\n      const botResponse = {\n        sender: 'bot',\n        text: getBotResponse(input)\n      };\n      setMessages(prevMessages => [...prevMessages, botResponse]);\n    }, 1000);\n  };\n  const getBotResponse = inputText => {\n    // Logique simple pour simuler des réponses\n    const responses = ['Je suis là pour vous aider !', 'Pouvez-vous préciser votre demande ?', 'Merci de votre message. Nous reviendrons vers vous sous peu.', 'C\\'est intéressant ! Dites-m\\'en plus.', 'Je ne suis pas sûr de comprendre. Pouvez-vous reformuler ?'];\n    return responses[Math.floor(Math.random() * responses.length)];\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter') {\n      handleSend();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Chatbot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-window\",\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${msg.sender === 'bot' ? 'bot-message' : 'user-message'}`,\n        children: msg.text\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-area\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Tapez votre message...\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        onKeyPress: handleKeyPress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSend,\n        children: \"Envoyer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatbot, \"kJI6nyaPa0vtTij0zxEeNV8MZlQ=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Chatbot","_s","messages","setMessages","sender","text","input","setInput","handleSend","trim","userMessage","setTimeout","botResponse","getBotResponse","prevMessages","inputText","responses","Math","floor","random","length","handleKeyPress","e","key","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","index","type","placeholder","value","onChange","target","onKeyPress","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Loris/Desktop/École/Big Data/TP/front/src/Components/Chatbot.js"],"sourcesContent":["// src/components/Chatbot.js\r\nimport React, { useState } from 'react';\r\nimport './Chatbot.css';\r\n\r\nconst Chatbot = () => {\r\n  const [messages, setMessages] = useState([\r\n    { sender: 'bot', text: 'Bonjour ! Comment puis-je vous aider aujourd\\'hui ?' },\r\n  ]);\r\n  const [input, setInput] = useState('');\r\n\r\n  const handleSend = () => {\r\n    if (input.trim() === '') return;\r\n\r\n    const userMessage = { sender: 'user', text: input };\r\n    setMessages([...messages, userMessage]);\r\n    setInput('');\r\n\r\n    // Simuler une réponse du bot après 1 seconde\r\n    setTimeout(() => {\r\n      const botResponse = {\r\n        sender: 'bot',\r\n        text: getBotResponse(input),\r\n      };\r\n      setMessages((prevMessages) => [...prevMessages, botResponse]);\r\n    }, 1000);\r\n  };\r\n\r\n  const getBotResponse = (inputText) => {\r\n    // Logique simple pour simuler des réponses\r\n    const responses = [\r\n      'Je suis là pour vous aider !',\r\n      'Pouvez-vous préciser votre demande ?',\r\n      'Merci de votre message. Nous reviendrons vers vous sous peu.',\r\n      'C\\'est intéressant ! Dites-m\\'en plus.',\r\n      'Je ne suis pas sûr de comprendre. Pouvez-vous reformuler ?',\r\n    ];\r\n    return responses[Math.floor(Math.random() * responses.length)];\r\n  };\r\n\r\n  const handleKeyPress = (e) => {\r\n    if (e.key === 'Enter') {\r\n      handleSend();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"chatbot-container\">\r\n      <h2>Chatbot</h2>\r\n      <div className=\"chat-window\">\r\n        {messages.map((msg, index) => (\r\n          <div\r\n            key={index}\r\n            className={`message ${msg.sender === 'bot' ? 'bot-message' : 'user-message'}`}\r\n          >\r\n            {msg.text}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className=\"input-area\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Tapez votre message...\"\r\n          value={input}\r\n          onChange={(e) => setInput(e.target.value)}\r\n          onKeyPress={handleKeyPress}\r\n        />\r\n        <button onClick={handleSend}>Envoyer</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chatbot;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}