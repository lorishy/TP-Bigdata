{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\misgo\\\\IPSSI\\\\M2\\\\1 - Big Data\\\\TPs\\\\TpBigData\\\\front\\\\src\\\\Components\\\\MessageChecker.js\",\n  _s = $RefreshSig$();\n// src/components/MessageChecker.js\nimport React, { useState } from 'react';\nimport './MessageChecker.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MessageChecker = () => {\n  _s();\n  const [input, setInput] = useState('');\n  const [result, setResult] = useState(null);\n  const handleCheck = () => {\n    if (input.trim() === '') return;\n    const analysis = analyzeMessage(input);\n    setResult(analysis);\n    setInput('');\n  };\n  const analyzeMessage = message => {\n    const inappropriateWords = ['insulte', 'racisme', 'violence']; // Liste de mots inappropriés\n    let appropriateness = 'Approprié';\n    let type = 'Aucun';\n    inappropriateWords.forEach(word => {\n      if (message.toLowerCase().includes(word)) {\n        appropriateness = 'Inapproprié';\n        type = `Contient : ${word}`;\n      }\n    });\n    return {\n      appropriateness,\n      type\n    };\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter') {\n      handleCheck();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"checker-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"V\\xE9rificateur de message\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-area\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Entrez votre message...\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        onKeyPress: handleKeyPress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCheck,\n        children: \"V\\xE9rifier\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), result && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `result ${result.appropriateness === 'Inapproprié' ? 'inappropriate' : 'appropriate'}`,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"R\\xE9sultat : \", result.appropriateness]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), result.type !== 'Aucun' && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Type d'inappropri\\xE9 : \", result.type]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 39\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(MessageChecker, \"xGTrbNCgVEbOpoL4fu+Zex5E0Ig=\");\n_c = MessageChecker;\nexport default MessageChecker;\nvar _c;\n$RefreshReg$(_c, \"MessageChecker\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","MessageChecker","_s","input","setInput","result","setResult","handleCheck","trim","analysis","analyzeMessage","message","inappropriateWords","appropriateness","type","forEach","word","toLowerCase","includes","handleKeyPress","e","key","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","target","onKeyPress","onClick","_c","$RefreshReg$"],"sources":["C:/Users/misgo/IPSSI/M2/1 - Big Data/TPs/TpBigData/front/src/Components/MessageChecker.js"],"sourcesContent":["// src/components/MessageChecker.js\r\nimport React, { useState } from 'react';\r\nimport './MessageChecker.css';\r\n\r\nconst MessageChecker = () => {\r\n  const [input, setInput] = useState('');\r\n  const [result, setResult] = useState(null);\r\n\r\n  const handleCheck = () => {\r\n    if (input.trim() === '') return;\r\n\r\n    const analysis = analyzeMessage(input);\r\n    setResult(analysis);\r\n    setInput('');\r\n  };\r\n\r\n  const analyzeMessage = (message) => {\r\n    const inappropriateWords = ['insulte', 'racisme', 'violence']; // Liste de mots inappropriés\r\n    let appropriateness = 'Approprié';\r\n    let type = 'Aucun';\r\n\r\n    inappropriateWords.forEach((word) => {\r\n      if (message.toLowerCase().includes(word)) {\r\n        appropriateness = 'Inapproprié';\r\n        type = `Contient : ${word}`;\r\n      }\r\n    });\r\n\r\n    return { appropriateness, type };\r\n  };\r\n\r\n  const handleKeyPress = (e) => {\r\n    if (e.key === 'Enter') {\r\n      handleCheck();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"checker-container\">\r\n      <h2>Vérificateur de message</h2>\r\n      <div className=\"input-area\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Entrez votre message...\"\r\n          value={input}\r\n          onChange={(e) => setInput(e.target.value)}\r\n          onKeyPress={handleKeyPress}\r\n        />\r\n        <button onClick={handleCheck}>Vérifier</button>\r\n      </div>\r\n      {result && (\r\n        <div className={`result ${result.appropriateness === 'Inapproprié' ? 'inappropriate' : 'appropriate'}`}>\r\n          <p>Résultat : {result.appropriateness}</p>\r\n          {result.type !== 'Aucun' && <p>Type d'inapproprié : {result.type}</p>}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MessageChecker;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}