{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\misgo\\\\IPSSI\\\\M2\\\\1 - Big Data\\\\TPs\\\\TpBigData\\\\front\\\\src\\\\Components\\\\MessageChecker.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './MessageChecker.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MessageChecker = () => {\n  _s();\n  const [input, setInput] = useState('');\n  const [result, setResult] = useState(null);\n  const handleCheck = () => {\n    if (input.trim() === '') return;\n    console.log('Message à vérifier :', input); // Vérifie le message qui est envoyé pour analyse\n\n    const analysis = analyzeMessage(input);\n    console.log('Résultat de l\\'analyse :', analysis); // Vérifie le résultat de l'analyse\n\n    setResult(analysis);\n    setInput('');\n  };\n  const analyzeMessage = message => {\n    const inappropriateWords = ['insulte', 'racisme', 'violence']; // Liste de mots inappropriés\n    let appropriateness = 'Approprié';\n    let type = 'Aucun';\n    inappropriateWords.forEach(word => {\n      if (message.toLowerCase().includes(word)) {\n        console.log(`Mot inapproprié trouvé : ${word}`); // Affiche chaque mot inapproprié trouvé\n        appropriateness = 'Inapproprié';\n        type = `Contient : ${word}`;\n      }\n    });\n    return {\n      appropriateness,\n      type\n    };\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter') {\n      console.log('Entrée pressée, envoi du message pour vérification'); // Vérifie que la touche \"Entrée\" a été pressée\n      handleCheck();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"checker-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"V\\xE9rificateur de message\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-area\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Entrez votre message...\",\n        value: input,\n        onChange: e => {\n          console.log('Texte d\\'entrée modifié :', e.target.value); // Vérifie les modifications de texte\n          setInput(e.target.value);\n        },\n        onKeyPress: handleKeyPress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          console.log('Bouton Vérifier cliqué'); // Vérifie que le bouton \"Vérifier\" est cliqué\n          handleCheck();\n        },\n        children: \"V\\xE9rifier\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), result && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `result ${result.appropriateness === 'Inapproprié' ? 'inappropriate' : 'appropriate'}`,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"R\\xE9sultat : \", result.appropriateness]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), result.type !== 'Aucun' && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Type d'inappropri\\xE9 : \", result.type]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 39\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(MessageChecker, \"xGTrbNCgVEbOpoL4fu+Zex5E0Ig=\");\n_c = MessageChecker;\nexport default MessageChecker;\nvar _c;\n$RefreshReg$(_c, \"MessageChecker\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","MessageChecker","_s","input","setInput","result","setResult","handleCheck","trim","console","log","analysis","analyzeMessage","message","inappropriateWords","appropriateness","type","forEach","word","toLowerCase","includes","handleKeyPress","e","key","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","target","onKeyPress","onClick","_c","$RefreshReg$"],"sources":["C:/Users/misgo/IPSSI/M2/1 - Big Data/TPs/TpBigData/front/src/Components/MessageChecker.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './MessageChecker.css';\r\n\r\nconst MessageChecker = () => {\r\n  const [input, setInput] = useState('');\r\n  const [result, setResult] = useState(null);\r\n\r\n  const handleCheck = () => {\r\n    if (input.trim() === '') return;\r\n\r\n    console.log('Message à vérifier :', input); // Vérifie le message qui est envoyé pour analyse\r\n\r\n    const analysis = analyzeMessage(input);\r\n    console.log('Résultat de l\\'analyse :', analysis); // Vérifie le résultat de l'analyse\r\n\r\n    setResult(analysis);\r\n    setInput('');\r\n  };\r\n\r\n  const analyzeMessage = (message) => {\r\n    const inappropriateWords = ['insulte', 'racisme', 'violence']; // Liste de mots inappropriés\r\n    let appropriateness = 'Approprié';\r\n    let type = 'Aucun';\r\n\r\n    inappropriateWords.forEach((word) => {\r\n      if (message.toLowerCase().includes(word)) {\r\n        console.log(`Mot inapproprié trouvé : ${word}`); // Affiche chaque mot inapproprié trouvé\r\n        appropriateness = 'Inapproprié';\r\n        type = `Contient : ${word}`;\r\n      }\r\n    });\r\n\r\n    return { appropriateness, type };\r\n  };\r\n\r\n  const handleKeyPress = (e) => {\r\n    if (e.key === 'Enter') {\r\n      console.log('Entrée pressée, envoi du message pour vérification'); // Vérifie que la touche \"Entrée\" a été pressée\r\n      handleCheck();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"checker-container\">\r\n      <h2>Vérificateur de message</h2>\r\n      <div className=\"input-area\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Entrez votre message...\"\r\n          value={input}\r\n          onChange={(e) => {\r\n            console.log('Texte d\\'entrée modifié :', e.target.value); // Vérifie les modifications de texte\r\n            setInput(e.target.value);\r\n          }}\r\n          onKeyPress={handleKeyPress}\r\n        />\r\n        <button onClick={() => {\r\n          console.log('Bouton Vérifier cliqué'); // Vérifie que le bouton \"Vérifier\" est cliqué\r\n          handleCheck();\r\n        }}>\r\n          Vérifier\r\n        </button>\r\n      </div>\r\n      {result && (\r\n        <div className={`result ${result.appropriateness === 'Inapproprié' ? 'inappropriate' : 'appropriate'}`}>\r\n          <p>Résultat : {result.appropriateness}</p>\r\n          {result.type !== 'Aucun' && <p>Type d'inapproprié : {result.type}</p>}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MessageChecker;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}